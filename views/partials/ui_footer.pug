#helpModal.ui.modal
  i.close.icon
  img#dartie-image1.ui.small.image.right.floated(src='/images/Dartie.png' style="float: left")
  h1#question(style="margin: 10px") What can I help you with?
  .ui.grid.centered(style="clear: both")
    .three.wide.column
      form#myForm1.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='How to change the text size?')
        button#modules.ui.button.blue(type='submit') How to change the text size?
        p#chatResponse1(style="display: none") This is a hidden message.
      br
      br
      br
      br
      form#myForm2.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='Do you have a dark mode?')
        button#accessibility.ui.button.blue(type='submit') Do you have a dark mode?
        p#chatResponse2(style="display: none") This is a hidden message.
      br
      br
      br
      br
      form#myForm3.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='How to turn on dark mode?')
        button#account.ui.button.blue(type='submit') How to turn on dark mode?
        p#chatResponse3(style="display: none") This is a hidden message.
      br
      br
      br
      br
    .three.wide.column
      form#myForm4.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='How to turn off dark mode?')
        button#modules.ui.button.blue(type='submit') How to turn off dark mode?
        p#chatResponse4(style="display: none") This is a hidden message.
      br
      br
      br
      br
      form#myForm5.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='How to turn on game mode?')
        button#accessibility.ui.button.blue(type='submit') How to turn on game mode?
        p#chatResponse5(style="display: none") This is a hidden message.
      br
      br
      br
      br
      form#myForm6.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='How to turn on learn mode?')
        button#account.ui.button.blue(type='submit') How to turn on learn mode?
        p#chatResponse6(style="display: none") This is a hidden message.
      br
      br
      br
      br
    .three.wide.column
      form#myForm7.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='What’s the difference between learn mode and game mode?')
        button#modules.ui.button.blue(type='submit') What’s the difference between learn mode and game mode?
        p#chatResponse7(style="display: none") This is a hidden message.
      br
      br
      br
      br
      br
      br
      br
      form#myForm8.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='I forgot my password. How do I obtain it?')
        button#accessibility.ui.button.blue(type='submit') I forgot my password. How do I obtain it?
        p#chatResponse8(style="display: none") This is a hidden message.
      br
      br
      br
      br
    .three.wide.column
      form#myForm9.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='I’m a visitor. How do I login?')
        button#modules.ui.button.blue(type='submit') I’m a visitor. How do I login?
        p#chatResponse9(style="display: none") This is a hidden message.
      br
      br
      br
      br
      form#myForm10.ui.form(action='/chatbot', method='POST', style='float: left')
        input(type='hidden', name='_csrf', value=csrfToken)
        input(type='hidden', name='sender', value='test_user')
        input(type='hidden', name='message' value='I already have an account. How do I login?')
        button#accessibility.ui.button.blue(type='submit') I already have an account. How do I login?
        p#chatResponse10(style="display: none") This is a hidden message.
      br
      br
      br
      br
#access.ui.modal
  i.close.icon
  h3(style='margin: 10px') Accessibility Options
  .ui.grid
      .six.wide.row.centered
          .ui.medium.buttons
              button#large.ui.button.green.large(onclick='changeToLarge()') Large Text
              .or
              button#medium.ui.button.green.medium(onclick='changeToMedium()') Medium Text
              .or
              button#small.ui.button.green.small(onclick='changeToSmall()') Small Text
      .four.wide.row.centered
          .ui.medium.buttons
              button#dark.ui.button.black(onclick='changeToDark()') Dark Mode
              .or
              button#light.ui.button.white(onclick='changeToLight()') Light Mode
      .four.wide.row.centered
          .ui.medium.buttons
              button#gameOn.ui.button.blue(onclick='changeToGame()') Game Mode
              .or
              button#gameOff.ui.button.white(onclick='changeToLearn()') Learn Mode
  br

#footer.ui.bottom.fixed.small.borderless.menu.testDriveFooter(style='background-color:#dbdbdb')
  .left.menu
    .item
      button.ui.button.blue(onclick="showAccessibilityModal()") Accessibility Menu
    .item
      p Contact Information: dart@learn.com
  .right.menu  
    .item
      button#help.ui.button.black(onclick="showHelpModal()") Help

script.

  function showYes(){
    var hid = document.getElementById("understand");
    hid.style.visibility = "visible";
    hid = document.getElementById("understand_button");
    hid.style.visibility = "hidden";
    hid = document.getElementById("yay");
    hid.style.visibility = "visible";
    hid = document.getElementById("topics_group");
    hid.style.visibility = "visible";
  }

  function showTopic(name){
    document.getElementById("topic_text").innerHTML = name;
    var hid = document.getElementById("topics_group");
    hid.style.visibility = "hidden";
    hid = document.getElementById("topic");
    hid.style.visibility = "visible";
    hid = document.getElementById("topic_response1");
    hid.style.visibility = "visible";
    hid = document.getElementById("topic_response2");
    hid.style.visibility = "visible";
  }

  function showHelpModal(){
    $('#helpModal.ui.modal')
      .modal('show')
    ;
  }

  function showAccessibilityModal(){
    $('#access.ui.modal')
      .modal('show')
    ;
  }

  document.getElementById('dark').onclick = dark;
  document.getElementById('light').onclick = light;
  document.getElementById('small').onclick = small;
  document.getElementById('medium').onclick = medium;
  document.getElementById('large').onclick = large;
  document.getElementById('gameOn').onclick = on;
  document.getElementById('gameOff').onclick = off;

  function on(){
      window.sessionStorage.setItem('gameMode', 'true');
      window.location.reload();
  }

  function off(){
      window.sessionStorage.setItem('gameMode', 'false');
      window.location.reload();
  }

  function changeToDark() {
    window.sessionStorage.setItem('darkMode', 'true');

    let segmentation = document.getElementById('segmentation');
    if (segmentation === null) {
      return false;
    } 

    document.getElementById('segmentation').style.backgroundColor = 'black';
    let tags = ["h1","h3","h4", "ul", "li", "a", "span", "p", "b", "label"];
      for(var j = 0; j < tags.length; j++){
        let collection = document.getElementById("segmentation").getElementsByTagName(tags[j]);
        for (var i = 0; i < collection.length; i++) {
            collection[i].style.color = "white";
        }
      }
        return false;
    }

  function changeToLight() {
    window.sessionStorage.setItem('darkMode', 'false');

    let segmentation = document.getElementById('segmentation');
    if (segmentation === null) {
      return false;
    } 

    document.getElementById('segmentation').style.backgroundColor = 'white';
    let tags = ["h1","h3","h4", "ul", "li", "a", "span", "p", "b", "label"];
      for(var j = 0; j < tags.length; j++){
        let collection = document.getElementById("segmentation").getElementsByTagName(tags[j]);
        for (var i = 0; i < collection.length; i++) {
            collection[i].style.color = "black";
        }
      }
      return false;
    }

  function changeToSmall() {
      window.sessionStorage.setItem('textMode', 'small');

      let segmentation = document.getElementById('segmentation');
      if (segmentation === null) {
        return false;
      } 

      let tags = ["h1","h3","h4", "ul", "li", "a", "span", "p", "b", "h2", "label"];
      newFontSize = 1.14285714 * .75;
      for(var j = 0; j < tags.length; j++){
      let collection = document.getElementById("segmentation").getElementsByTagName(tags[j]);
          for (var i = 0; i < collection.length; i++) {
              collection[i].style.fontSize = newFontSize + "rem";
          }
      }
      document.body.style.fontSize = newFontSize + "rem";
      return false;
  }

  function changeToMedium() {
      window.sessionStorage.setItem('textMode', 'medium');
      let segmentation = document.getElementById('segmentation');
      if (segmentation === null) {
        return false;
      } 

      let tags = ["h1","h3","h4", "ul", "li", "a", "span", "p", "b", "h2", "label"];
      newFontSize = 1.14285714 * 1.25;
      for(var j = 0; j < tags.length; j++){
          let collection = document.getElementById("segmentation").getElementsByTagName(tags[j]);
          for (var i = 0; i < collection.length; i++) {
              collection[i].style.fontSize = newFontSize + "rem";
          }
      }
      document.body.style.fontSize = newFontSize + "rem";
      return false;
  }

  function changeToLarge() {
      window.sessionStorage.setItem('textMode', 'large');

      let segmentation = document.getElementById('segmentation');
      if (segmentation === null) {
        return false;
      } 

      let tags = ["h1","h3","h4", "ul", "li", "a", "span", "p", "b", "h2", "label"];
      newFontSize = 1.14285714 * 1.75;
      for(var j = 0; j < tags.length; j++){
          let collection = document.getElementById("segmentation").getElementsByTagName(tags[j]);
          for (var i = 0; i < collection.length; i++) {
              collection[i].style.fontSize = newFontSize + "rem";
          }
      }
      document.body.style.fontSize = newFontSize + "rem";
      return false;
  }

  function changeToLearn(){
      window.sessionStorage.setItem('gameMode', 'false');
      const helpMenu = document.querySelector('#dartie-image1');
      helpMenu.style.display = 'none';
      document.body.style.backgroundColor = "#F5F8FA";
  }

  function changeToGame(){
      window.sessionStorage.setItem('gameMode', 'true');
      const helpMenu = document.querySelector('#dartie-image1');
      helpMenu.style.display = 'block';
      document.body.style.backgroundColor = "#F5F8FA";
  }

  document.forms['myForm1'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
      if(document.getElementById('chatResponse1').style.display == "block") document.getElementById('chatResponse1').style.display = "none";
      else{
        document.getElementById('chatResponse1').innerHTML = body[0].text;
        document.getElementById('chatResponse1').style.display = "block";
      }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm2'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
      if(document.getElementById('chatResponse2').style.display == "block") document.getElementById('chatResponse2').style.display = "none";
      else{
        document.getElementById('chatResponse2').innerHTML = body[0].text;
        document.getElementById('chatResponse2').style.display = "block";
      }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm3'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse3').style.display == "block") document.getElementById('chatResponse3').style.display = "none";
        else{
          document.getElementById('chatResponse3').innerHTML = body[0].text;
          document.getElementById('chatResponse3').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm4'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse4').style.display == "block") document.getElementById('chatResponse4').style.display = "none";
        else{
          document.getElementById('chatResponse4').innerHTML = body[0].text;
          document.getElementById('chatResponse4').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm5'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse5').style.display == "block") document.getElementById('chatResponse5').style.display = "none";
        else{
          document.getElementById('chatResponse5').innerHTML = body[0].text;
          document.getElementById('chatResponse5').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm6'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse6').style.display == "block") document.getElementById('chatResponse6').style.display = "none";
        else{
          document.getElementById('chatResponse6').innerHTML = body[0].text;
          document.getElementById('chatResponse6').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm7'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse7').style.display == "block") document.getElementById('chatResponse7').style.display = "none";
        else{
          document.getElementById('chatResponse7').innerHTML = body[0].text;
          document.getElementById('chatResponse7').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm8'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse8').style.display == "block") document.getElementById('chatResponse8').style.display = "none";
        else{
          document.getElementById('chatResponse8').innerHTML = body[0].text;
          document.getElementById('chatResponse8').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm9'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse9').style.display == "block") document.getElementById('chatResponse9').style.display = "none";
        else{
          document.getElementById('chatResponse9').innerHTML = body[0].text;
          document.getElementById('chatResponse9').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });

  document.forms['myForm10'].addEventListener('submit', (event) => {
    event.preventDefault();
    fetch(event.target.action, {
        method: 'POST',
        body: new URLSearchParams(new FormData(event.target)) 
    }).then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    }).then((body) => {
        if(document.getElementById('chatResponse10').style.display == "block") document.getElementById('chatResponse10').style.display = "none";
        else{
          document.getElementById('chatResponse10').innerHTML = body[0].text;
          document.getElementById('chatResponse10').style.display = "block";
        }
    }).catch((error) => {
        // TODO handle error
    });
  });
